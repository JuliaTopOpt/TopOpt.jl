var documenterSearchIndex = {"docs":
[{"location":"TopOptProblems/#TopOptProblems","page":"TopOptProblems","title":"TopOptProblems","text":"","category":"section"},{"location":"TopOptProblems/","page":"TopOptProblems","title":"TopOptProblems","text":"This sub-module of TopOpt defines a number of standard topology optimization problems for the convenient testing of algorithms.","category":"page"},{"location":"TopOptProblems/","page":"TopOptProblems","title":"TopOptProblems","text":"CurrentModule = TopOpt.TopOptProblems","category":"page"},{"location":"TopOptProblems/#Problem-types","page":"TopOptProblems","title":"Problem types","text":"","category":"section"},{"location":"TopOptProblems/","page":"TopOptProblems","title":"TopOptProblems","text":"StiffnessTopOptProblem\nPointLoadCantilever\nHalfMBB\nLBeam\nTieBeam\nInpStiffness","category":"page"},{"location":"TopOptProblems/#TopOpt.TopOptProblems.StiffnessTopOptProblem","page":"TopOptProblems","title":"TopOpt.TopOptProblems.StiffnessTopOptProblem","text":"Abstract stiffness topology optimization problem. All subtypes must have the following fields:     ch::ConstraintHandler     black::BitVector     white::BitVector     varind::AbstractVector{Int}     metadata::Metadata\n\n\n\n\n\n","category":"type"},{"location":"TopOptProblems/#TopOpt.TopOptProblems.PointLoadCantilever","page":"TopOptProblems","title":"TopOpt.TopOptProblems.PointLoadCantilever","text":"///**********************************\n///*                                *\n///*                                * |\n///*                                * |\n///********************************** v\n\n\nstruct PointLoadCantilever{dim, T, N, M} <: StiffnessTopOptProblem{dim, T}\n    rect_grid::RectilinearGrid{dim, T, N, M}\n    E::T\n    ν::T\n    ch::ConstraintHandler{DofHandler{dim, N, T, M}, T}\n    force::T\n    force_dof::Int\n    metadata::Metadata\nend\n\ndim: dimension of the problem\n\nT: number type for computations and coordinates\n\nN: number of nodes in a cell of the grid\n\nM: number of faces in a cell of the grid\n\nrect_grid: a RectilinearGrid struct\n\nE: Young's modulus\n\nν: Poisson's ration\n\nch: a JuAFEM.ConstraintHandler struct\n\nforce: force at the center right of the cantilever beam (positive is downward)\n\nforce_dof: dof number at which the force is applied\n\nmetadata:: Metadata having various cell-node-dof relationships\n\nAPI:\n\n    PointLoadCantilever(nels::NTuple{dim,Int}, sizes::NTuple{dim}, E, ν, force) where {dim}\n\nExample:\n\n\nnels = (60,20);\nsizes = (1.0,1.0);\nE = 1.0;\nν = 0.3;\nforce = 1.0;\nproblem = PointLoadCantilever(nels, sizes, E, ν, force)\n\n\n\n\n\n","category":"type"},{"location":"TopOptProblems/#TopOpt.TopOptProblems.HalfMBB","page":"TopOptProblems","title":"TopOpt.TopOptProblems.HalfMBB","text":" |\n |\n v\nO*********************************\nO*                               *\nO*                               *\nO*                               *\nO*********************************\n                                 O\n\nstruct HalfMBB{dim, T, N, M} <: StiffnessTopOptProblem{dim, T}\n    rect_grid::RectilinearGrid{dim, T, N, M}\n    E::T\n    ν::T\n    ch::ConstraintHandler{DofHandler{dim, N, T, M}, T}\n    force::T\n    force_dof::Int\n    metadata::Metadata\nend\n\ndim: dimension of the problem\n\nT: number type for computations and coordinates\n\nN: number of nodes in a cell of the grid\n\nM: number of faces in a cell of the grid\n\nrect_grid: a RectilinearGrid struct\n\nE: Young's modulus\n\nν: Poisson's ration\n\nch: a JuAFEM.ConstraintHandler struct\n\nforce: force at the top left of half the MBB (positive is downward)\n\nforce_dof: dof number at which the force is applied\n\nmetadata:: Metadata having various cell-node-dof relationships\n\nAPI:\n\n    HalfMBB(nels::NTuple{dim,Int}, sizes::NTuple{dim}, E, ν, force) where {dim}\n\nExample:\n\n\nnels = (60,20);\nsizes = (1.0,1.0);\nE = 1.0;\nν = 0.3;\nforce = -1.0;\nproblem = HalfMBB(nels, sizes, E, ν, force)\n\n\n\n\n\n","category":"type"},{"location":"TopOptProblems/#TopOpt.TopOptProblems.LBeam","page":"TopOptProblems","title":"TopOpt.TopOptProblems.LBeam","text":"////////////\n............\n.          .\n.          .\n.          . \n.          .                    \n.          ......................\n.                               .\n.                               . \n.                               . |\n................................. v\n                                force\n\n\n\n\n\n","category":"type"},{"location":"TopOptProblems/#TopOpt.TopOptProblems.TieBeam","page":"TopOptProblems","title":"TopOpt.TopOptProblems.TieBeam","text":"                                                               1\n                                                               \n                                                              OOO\n                                                              ...\n                                                              . .\n                                                           4  . . \n                                30                            . .   \n/ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . <-\n/ .                                                                 . <- 2 f \n/ .    3                                                            . <- \n/ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . <-\n                                                              ^^^\n                                                              |||\n                                                              1 f\n\n\n\n\n\n","category":"type"},{"location":"TopOptProblems/#TopOpt.TopOptProblems.IO.INP.InpStiffness","page":"TopOptProblems","title":"TopOpt.TopOptProblems.IO.INP.InpStiffness","text":"Stiffness problem imported from a .inp file.\n\n\n\n\n\n","category":"type"},{"location":"TopOptProblems/#Finite-element-backend","page":"TopOptProblems","title":"Finite element backend","text":"","category":"section"},{"location":"TopOptProblems/","page":"TopOptProblems","title":"TopOptProblems","text":"Currently, TopOpt uses a forked version of JuAFEM.jl. This means that all the problems above are described in the language and types of JuAFEM.","category":"page"},{"location":"TopOptProblems/","page":"TopOptProblems","title":"TopOptProblems","text":"The fork is needed for GPU support but the main package should also work on the CPU. The changes in the fork should make it back to the main repo at some point.","category":"page"},{"location":"TopOptProblems/#Element-matrices-and-vectors","page":"TopOptProblems","title":"Element matrices and vectors","text":"","category":"section"},{"location":"TopOptProblems/","page":"TopOptProblems","title":"TopOptProblems","text":"Generating the element stiffness matrices and load vectors from a linear elasticity stiffness problem sp::StiffnessTopOptProblem using a Gaussian quadrature order quad_order is done using:","category":"page"},{"location":"TopOptProblems/","page":"TopOptProblems","title":"TopOptProblems","text":"elementinfo = ElementFEAInfo(sp, quad_order)","category":"page"},{"location":"#TopOpt.jl-Documentation","page":"TopOpt.jl Documentation","title":"TopOpt.jl Documentation","text":"","category":"section"},{"location":"","page":"TopOpt.jl Documentation","title":"TopOpt.jl Documentation","text":"A WIP topology optimization package written in the Julia programming language.","category":"page"},{"location":"#Setup","page":"TopOpt.jl Documentation","title":"Setup","text":"","category":"section"},{"location":"","page":"TopOpt.jl Documentation","title":"TopOpt.jl Documentation","text":"using Pkg\n\npkg\"add https://github.com/mohamed82008/JuAFEM.jl#master\"\npkg\"add https://github.com/mohamed82008/VTKDataTypes.jl#master\"\npkg\"add https://github.com/mohamed82008/KissThreading.jl#master\"\npkg\"add https://github.com/mohamed82008/TopOpt.jl#master\"\npkg\"add Makie\"","category":"page"},{"location":"#Usage-example","page":"TopOpt.jl Documentation","title":"Usage example","text":"","category":"section"},{"location":"","page":"TopOpt.jl Documentation","title":"TopOpt.jl Documentation","text":"# Load the package\n\nusing TopOpt, Makie\n\n# Define the problem\n\nE = 1.0 # Young’s modulus\nv = 0.3 # Poisson’s ratio\nf = 1.0 # downward force\n\nproblem = PointLoadCantilever(Val{:Linear}, (40, 20, 20), (1.0, 1.0, 1.0), E, v, f)\n# problem = HalfMBB(Val{:Linear}, (60, 20), (1.0, 1.0), E, v, f)\n# problem = PointLoadCantilever(Val{:Quadratic}, (160, 40), (1.0, 1.0), E, v, f)\n# problem = LBeam(Val{:Linear}, Float64)\n\n# Parameter settings\n\nV = 0.3 # volume fraction\nxmin = 0.001 # minimum density\nrmin = 4.0 # density filter radius\n\n# Define a finite element solver\n\npenalty = TopOpt.PowerPenalty(3.0)\nsolver = FEASolver(Displacement, Direct, problem, xmin = xmin,\n    penalty = penalty)\n\n# Define compliance objective\n\nobj = Objective(TopOpt.Compliance(problem, solver, filterT = DensityFilter,\n    rmin = rmin, tracing = true, logarithm = false))\n\n# Define volume constraint\n\nconstr = Constraint(TopOpt.Volume(problem, solver, filterT = DensityFilter, rmin = rmin), V)\n\n# Define subproblem optimizer\n\nmma_options = options = MMA.Options(maxiter = 3000, \n    tol = MMA.Tolerances(kkttol = 0.001))\nconvcriteria = MMA.KKTCriteria()\noptimizer = MMAOptimizer(obj, constr, MMA.MMA87(),\n    ConjugateGradient(), options = mma_options,\n    convcriteria = convcriteria)\n\n# Define SIMP optimizer\n\nsimp = SIMP(optimizer, penalty.p)\n\n# Solve\n\nx0 = fill(1.0, length(solver.vars));\nresult = simp(x0)\n\n# Visualize the result using Makie.jl\n\nglmesh = GLMesh(problem, result.topology)\nmesh(glmesh)","category":"page"}]
}
