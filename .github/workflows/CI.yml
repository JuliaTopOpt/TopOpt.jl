name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
    tags: '*'
jobs:
  test:
    name: ${{matrix.group}} - Julia ${{ matrix.version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
        os:
          - ubuntu-latest
        arch:
          - x64
        group:
          - Core_Tests
          - Extended_Tests
          - Examples_1
          - Examples_2
          - Examples_3
          - WCSMO14_1
          - WCSMO14_2
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
        env:
          GROUP: ${{ matrix.group }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  # example for Makie-involving docs build
  # https://github.com/JuliaPlots/GLMakie.jl/blob/master/.github/workflows/ci.yml
  # https://github.com/JuliaPlots/GLMakie.jl/blob/master/.github/workflows/ci.yml
  # example for no-Makie-involving docs build
  # https://github.com/TuringLang/Turing.jl/blob/master/.github/workflows/Documentation.yml
  docs:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version: ['1.10',]
        os: ['ubuntu-latest',]
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
      # - uses: actions/cache@v1
      #   env:
      #     cache-name: cache-artifacts
      #   with:
      #     path: ~/.julia/artifacts
      #     key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-test-${{ env.cache-name }}-
      #       ${{ runner.os }}-test-
      #       ${{ runner.os }}-
      # - run: sudo apt-get update && sudo apt-get install -y xorg-dev mesa-utils xvfb libgl1 freeglut3-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev
      # - run: DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --project=docs -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - name: Install dependencies
        run: |
          julia --project=docs -e '
            using Pkg
            Pkg.instantiate()
            Pkg.develop(PackageSpec(path=pwd()))'
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        run: julia --project=docs --color=yes docs/make.jl
        # run: DISPLAY=:0 xvfb-run -s '-screen 0 1024x768x24' julia --project=docs --color=yes docs/make.jl
